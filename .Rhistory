ProductionTime <- read.table('Production Time.txt', header=FALSE)
PT_X <- ProductionTime$V2
PT_Y <- ProductionTime$V1
plot(x =PT_X,
y = PT_Y,
xlab = "Size",
ylab = "Time (Hr)",
xlim = c(0, max(PT_X)),
ylim = c(0, max(PT_Y)),
main = "Production Time - Scatter Plot")
PT_X1 = sqrt(PT_X)
PT_Frame = data.frame(PT_X1, PT_Y)
PT_model = lm(PT_Y~PT_X1, data=PT_Frame)
PT_summary = summary(PT_model)
coefficients(PT_model)
plot(x = PT_X1,
y = PT_Y,
xlab = "SQRT Size",
ylab = "Time (Hr)",
xlim = c(0, max(PT_X1)),
ylim = c(0, max(PT_Y)),
main = "Production Time - Transformed Scatter Plot")
abline(PT_model, col="red", lwd=3)
PT_res <- resid(PT_model)
plot(x = PT_X1,
y = PT_res,
xlab ="SQRT Size",
ylab = "Residuals",
xlim = c(0, max(PT_X1)),
ylim = c(min(PT_res), max(PT_res)),
main = "Production Time - Residuals")
abline(0, 0, col="black", lty=2, lwd=1)
qqnorm(PT_res,
ylab = "Residuals",
xlab = "Normal Scores",
main = "Production Time - Q-Q Plot")
qqline(PT_res, col="blue", lwd=1)
PT_summary$coefficients[ , 2]
One <- read.table('Number One.txt', header=FALSE)
One_X <- One$V1
One_Y <- One$V2
One_Frame = data.frame(One_X, One_Y)
One_model = lm(One_Y~One_X, data=One_Frame)
One_summary = summary(One_model)
coefficients(One_model)
plot(x = One_X,
y = One_Y,
xlab = "X",
ylab = "Y",
xlim = c(0, max(One_X)),
ylim = c(min(One_Y), max(One_Y)),
main = "Number One - Scatter Plot")
One_res <- resid(One_model)
plot(x = One_X,
y = One_res,
xlab ="X",
ylab = "Residuals",
xlim = c(0, max(One_X)),
ylim = c(min(One_res), max(One_res)),
main = "Number One - Residuals")
abline(0, 0, col="black", lty=2, lwd=1)
hist(One_res,
breaks = seq(-40, 40, 5),
xlab = "Residuals",
ylab = "Frequency",
main = "Number One - Residuals Histogram")
abline(v=0, col="black", lwd=2)
qqnorm(One_res,
xlab = "Normal Scores",
ylab = "Residuals",
main = "Number One - Q-Q Plot")
qqline(One_res, col="blue", lwd = 1)
Two <- read.table('Number Two.txt', header=FALSE)
Two_X <- Two$V1
Two_Y <- Two$V2
Two_Frame = data.frame(Two_X, Two_Y)
Two_model = lm(Two_Y~Two_X, data=Two_Frame)
Two_summary = summary(Two_model)
coefficients(Two_model)
plot(x = Two_X,
y = Two_Y,
xlab = "X",
ylab = "Y",
xlim = c(0, max(Two_X)),
ylim = c(min(Two_Y), max(Two_Y)),
main = "Number Two - Scatter Plot")
abline(Two_model, col="red", lwd=3)
Two_res <- resid(Two_model)
plot(x = Two_X,
y = Two_res,
xlab ="X",
ylab = "Residuals",
xlim = c(0, max(Two_X)),
ylim = c(min(Two_res), max(Two_res)),
main = "Number Two - Residuals")
abline(0, 0, col="black", lty=2, lwd=1)
min(Two_res)
max(Two_res)
hist(Two_res,
breaks = seq(-700, 700, 100),
xlab = "Residuals",
ylab = "Frequency",
main = "Number Two - Residuals Histogram")
abline(v=0, col="black", lwd=2)
qqnorm(Two_res,
xlab = "Normal Scores",
ylab = "Residuals",
main = "Number Two - Q-Q Plot")
qqline(Two_res, col = "blue", lwd = 1)
Three <- read.table('Number Three.txt', header=FALSE)
Three_X <- Three$V1
Three_Y <- Three$V2
Three_Frame = data.frame(Three_X, Three_Y)
Three_model = lm(Three_Y~Three_X, data=Three_Frame)
Three_summary = summary(Three_model)
coefficients(Three_model)
plot(x = Three_X,
y = Three_Y,
xlab = "X",
ylab = "Y",
xlim = c(0, max(Three_X)),
ylim = c(min(Three_Y), max(Three_Y)),
main = "Number Three - Scatter Plot")
abline(Three_model, col="red", lwd=3)
Three_res <- resid(Three_model)
plot(x = Three_X,
y = Three_res,
xlab ="X",
ylab = "Residuals",
xlim = c(0, max(Three_X)),
ylim = c(min(Three_res), max(Three_res)),
main = "Number Three - Residuals")
abline(0, 0, col="black", lty=2, lwd=1)
min(Three_res)
max(Three_res)
hist(Three_res,
breaks = seq(-450, 450, 50),
xlab = "Residuals",
ylab = "Frequency",
main = "Number Three - Residuals Histogram")
abline(v=0, col="black", lwd=2)
qqnorm(Three_res,
xlab = "Normal Scores",
ylab = "Residuals",
main = "Number Three - Q-Q Plot")
qqline(Three_res, col = "blue", lwd = 1)
CommercialProperties <- read.table('Commercial_Properties.txt', header=FALSE)
CP_X1 <- CommercialProperties$V1
CP_X2 <- CommercialProperties$V2
CP_X3 <- CommercialProperties$V3
CP_X4 <- CommercialProperties$V4
CP_Y <- CommercialProperties$V5
CP_Frame = data.frame(CP_X1, CP_X2, CP_X3, CP_X4, CP_Y)
CP_model = lm(CP_Y ~ CP_X1 + CP_X2 + CP_X3 + CP_X4, data=CP_Frame)
CP_summary = summary(CP_model)
coefficients(CP_model)
CP_summary
CP_summary$r.squared
XTX = cov(CP_Frame)
XTX
solve(XTX) # This is (XTX)^-1
